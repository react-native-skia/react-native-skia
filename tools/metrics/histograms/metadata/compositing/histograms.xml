<!--
Copyright 2020 The Chromium Authors. All rights reserved.
Use of this source code is governed by a BSD-style license that can be
found in the LICENSE file.
-->

<!--
This file is used to generate a comprehensive list of Compositing histograms
along with a detailed description for each histogram.

For best practices on writing histogram descriptions, see
https://chromium.googlesource.com/chromium/src.git/+/HEAD/tools/metrics/histograms/README.md

Please follow the instructions in the OWNERS file in this directory to find a
reviewer. If no OWNERS file exists, please consider signing up at
go/reviewing-metrics (Googlers only), as all subdirectories are expected to
have an OWNERS file. As a last resort you can send the CL to
chromium-metrics-reviews@google.com.
-->

<histogram-configuration>

<histograms>

<histogram name="Compositing.Browser.GPUMemoryForTilingsInKb" units="Kb"
    expires_after="2022-04-17">
  <owner>pdr@chromium.org</owner>
  <owner>paint-dev@chromium.org</owner>
  <owner>sky@chromium.org</owner>
  <summary>
    Warning: this histogram was expired from ~9/2020 to ~8/2021.

    The GPU memory allocated for tilings (in a browser process), summed over all
    picture layers. Emitted once per drawing. Nothing is recorded if there are
    no picture layers.

    Tilings are used for decomposition of the layer's entire contents at a
    picture screenspace resolution to do threaded rasterization.
  </summary>
</histogram>

<histogram name="Compositing.Browser.HitTestTimeToFindClosestLayer"
    units="microseconds" expires_after="2020-12-01">
  <obsolete>
    Expired Dec 2020.
  </obsolete>
  <owner>flackr@chromium.org</owner>
  <owner>input-dev@chromium.org</owner>
  <summary>
    Time spent finding the closest matching layer to a given point whenever we
    do hit testing on LayerTreeImpl (in a browser process).

    Warning: This metric may include reports from clients with low-resolution
    clocks (i.e. on Windows, ref. |TimeTicks::IsHighResolution()|). Such reports
    will cause this metric to have an abnormal distribution. When considering
    revising this histogram, see UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES for the
    solution.
  </summary>
</histogram>

<histogram name="Compositing.Browser.LayersUpdateTime" units="microseconds"
    expires_after="2022-03-06">
  <owner>schenney@chromium.org</owner>
  <owner>animations-dev@chromium.org</owner>
  <summary>
    Time spent updating layers, in microseconds. Recorded when layers are
    updated (in a browser process).

    Warning: This metric may include reports from clients with low-resolution
    clocks (i.e. on Windows, ref. |TimeTicks::IsHighResolution()|). Such reports
    will cause this metric to have an abnormal distribution. When considering
    revising this histogram, see UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES for the
    solution.
  </summary>
</histogram>

<histogram name="Compositing.Browser.LayerTreeImpl.CalculateDrawPropertiesUs"
    units="microseconds" expires_after="2022-03-06">
  <owner>schenney@chromium.org</owner>
  <owner>paint-dev@chromium.org</owner>
  <summary>
    Time spent updating layer draw properties, in microseconds. Recorded when a
    LayerTreeImpl's draw properties are updated (in a browser process).

    Warning: This metric may include reports from clients with low-resolution
    clocks (i.e. on Windows, ref. |TimeTicks::IsHighResolution()|). Such reports
    will cause this metric to have an abnormal distribution. When considering
    revising this histogram, see UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES for the
    solution.
  </summary>
</histogram>

<histogram name="Compositing.Browser.NumActiveLayers" units="layers"
    expires_after="2021-12-05">
  <owner>schenney@chromium.org</owner>
  <owner>paint-dev@chromium.org</owner>
  <summary>
    The number of layers in the active tree for each compositor frame. This is
    logged once per frame, before the frame is drawn (in a browser process).
  </summary>
</histogram>

<histogram name="Compositing.Browser.NumActivePictureLayers" units="layers"
    expires_after="2022-04-17">
  <owner>schenney@chromium.org</owner>
  <owner>paint-dev@chromium.org</owner>
  <summary>
    The number of PictureLayers in the active tree for each compositor frame.
    This is logged once per frame, before the frame is drawn (in a browser
    process).
  </summary>
</histogram>

<histogram name="Compositing.Browser.NumRenderSurfaces" units="surfaces"
    expires_after="2022-02-06">
  <owner>schenney@chromium.org</owner>
  <owner>paint-dev@chromium.org</owner>
  <summary>
    The number of render surfaces in the render surface layer list. Recorded
    each time the render surface layer list is constructed (in a browser
    process).
  </summary>
</histogram>

<histogram name="Compositing.ColorGamut" enum="ColorGamut"
    expires_after="2022-02-06">
  <owner>cblume@chromium.org</owner>
  <owner>khushalsagar@chromium.org</owner>
  <summary>
    Every time a frame is presented, record the generalized color gamut of that
    frame.
  </summary>
</histogram>

<histogram name="Compositing.CompositorFrameSinkSupport.ShouldSendBeginFrame"
    enum="SendBeginFrameResult" expires_after="2020-10-04">
  <obsolete>
    Expired Oct 2020
  </obsolete>
  <owner>kylechar@chromium.org</owner>
  <owner>sadrul@chromium.org</owner>
  <summary>
    Recorded for each OnBeginFrame() message that could potentially be sent to a
    CompositorFrameSinkClient. The value indicates if the message was sent to
    the client and why it was/wasn't sent.
  </summary>
</histogram>

<histogram name="Compositing.CopyFromSurfaceTime" units="ms"
    expires_after="2018-08-30">
  <owner>wychen@chromium.org</owner>
  <summary>
    The turn around time taken for the async readback of pixels is measured
    here. This should be marked as obsolete once some tests no longer rely on
    this histogram. See crbug/1110961 for more details.
  </summary>
</histogram>

<histogram name="Compositing.DirectRenderer.GL.DrawFrameUs"
    units="microseconds" expires_after="2022-04-24">
  <owner>weiliangc@chromium.org</owner>
  <summary>
    Time spent drawing of composited layers by GLRenderer, in microseconds. This
    is logged once per frame, when a frame should be drawn.

    Warning: This metric may include reports from clients with low-resolution
    clocks (i.e. on Windows, ref. |TimeTicks::IsHighResolution()|). Such reports
    will cause this metric to have an abnormal distribution. When considering
    revising this histogram, see UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES for the
    solution.
  </summary>
</histogram>

<histogram name="Compositing.DirectRenderer.OverlayProcessingUs"
    units="microseconds" expires_after="2022-05-01">
  <owner>khaslett@chromium.org</owner>
  <owner>kylechar@chromium.org</owner>
  <summary>
    Time spent processing quads to see which can be replaced with overlays. This
    is logged once per frame, when a frame should be drawn.

    Warning: This metric may include reports from clients with low-resolution
    clocks (i.e. on Windows, ref. |TimeTicks::IsHighResolution()|). Such reports
    will cause this metric to have an abnormal distribution. When considering
    revising this histogram, see UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES for the
    solution.
  </summary>
</histogram>

<histogram name="Compositing.DirectRenderer.PartialSwap.ExtraDamage" units="%"
    expires_after="2022-04-10">
  <owner>vasilyt@chromium.org</owner>
  <owner>backer@chromium.org</owner>
  <summary>
    The area of the display damage that was added to current frame damage after
    all adjustments, including FrameBufferDamage from buffer queue and render
    pass filters.

    This metric is reported once per frame only on platforms/devices that
    support partial swap and does not include &quot;empty swap&quot; (no frame
    damage) case.
  </summary>
</histogram>

<histogram name="Compositing.DirectRenderer.PartialSwap.FrameBufferDamage"
    units="%" expires_after="2022-04-17">
  <owner>vasilyt@chromium.org</owner>
  <owner>backer@chromium.org</owner>
  <summary>
    The area of the display that was damaged since previous draw to this frame
    buffer.

    This metric is reported once per frame only on platforms/devices that
    support partial swap and does not include &quot;empty swap&quot; (no frame
    damage) case.
  </summary>
</histogram>

<histogram name="Compositing.DirectRenderer.PartialSwap.RootDamage" units="%"
    expires_after="2022-04-17">
  <owner>vasilyt@chromium.org</owner>
  <owner>backer@chromium.org</owner>
  <summary>
    The area of the display that was damaged in current frame.

    This metric is reported only on platforms/devices that support partial swap
    and does not include &quot;empty swap&quot; (no frame damage) case.
  </summary>
</histogram>

<histogram name="Compositing.DirectRenderer.PartialSwap.TotalDamage" units="%"
    expires_after="2022-04-17">
  <owner>vasilyt@chromium.org</owner>
  <owner>backer@chromium.org</owner>
  <summary>
    The total area of the display that will be redrawn this frame.

    This metric is reported only on platforms/devices that support partial swap
    and does not include &quot;empty swap&quot; (no frame damage) case.
  </summary>
</histogram>

<histogram name="Compositing.DirectRenderer.Software.DrawFrameUs"
    units="microseconds" expires_after="2021-08-09">
  <owner>weiliangc@chromium.org</owner>
  <summary>
    Time spent drawing of composited layers by SoftwareRenderer, in
    microseconds. This is logged once per frame, when a frame should be drawn.

    Warning: This metric may include reports from clients with low-resolution
    clocks (i.e. on Windows, ref. |TimeTicks::IsHighResolution()|). Such reports
    will cause this metric to have an abnormal distribution. When considering
    revising this histogram, see UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES for the
    solution.
  </summary>
</histogram>

<histogram name="Compositing.DirectRenderer.VK.DrawFrameUs"
    units="microseconds" expires_after="2020-11-29">
  <owner>penghuang@chromium.org</owner>
  <owner>backer@chromium.org</owner>
  <summary>
    Time spent drawing of composited layers by SkiaRenderer with Vulkan backend,
    in microseconds. This is logged once per frame, when a frame should be
    drawn.

    Warning: This metric may include reports from clients with low-resolution
    clocks (i.e. on Windows, ref. |TimeTicks::IsHighResolution()|). Such reports
    will cause this metric to have an abnormal distribution. When considering
    revising this histogram, see UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES for the
    solution.
  </summary>
</histogram>

<histogram name="Compositing.Display.Draw.Occlusion.Calculation.Time"
    units="microseconds" expires_after="2022-04-10">
  <owner>yiyix@chromium.org</owner>
  <owner>chromeos-gfx@chromium.org</owner>
  <summary>
    Time spent to remove invisible quads from the quad_list in CompositorFrame.

    Warning: This metric may include reports from clients with low-resolution
    clocks (i.e. on Windows, ref. |TimeTicks::IsHighResolution()|). Such reports
    will cause this metric to have an abnormal distribution. When considering
    revising this histogram, see UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES for the
    solution.
  </summary>
</histogram>

<histogram name="Compositing.Display.Draw.Occlusion.Drawing.Area.Saved2"
    units="px" expires_after="M77">
  <owner>yiyix@chromium.org</owner>
  <summary>
    It records the total drawing area skipped to show on screen as a result of
    applying draw occlusion. This is logged once per frame, when the frame is
    drawn.
  </summary>
</histogram>

<histogram name="Compositing.Display.Draw.Occlusion.Percentage.Saved" units="%"
    expires_after="M77">
  <owner>yiyix@chromium.org</owner>
  <summary>
    It records the percentage of total area drawing skipped by draw occlusion of
    the total area of damage rects in a compositor frame. This is logged once
    per frame, when the frame is drawn.
  </summary>
</histogram>

<histogram name="Compositing.Display.DrawToSwapUs" units="microseconds"
    expires_after="2022-03-27">
  <owner>backer@chromium.org</owner>
  <owner>rjkroege@chromium.org</owner>
  <summary>
    This is logged once per frame, if the output surface provides timing
    information. It measures the time from the display compositor starting a
    draw on the Viz Compositor thread to issuing all related draw calls to the
    driver on the Gpu Main thread. Only reported for platforms supporting high
    resolution clocks.
  </summary>
</histogram>

<histogram name="Compositing.Display.DrmOverlayManager.CacheHit" enum="Boolean"
    expires_after="2020-09-01">
  <owner>samans@chromium.org</owner>
  <owner>rjkroege@chromium.org</owner>
  <summary>
    Indicates whether DrmOverlayManager was able to find the overlay
    configuration in its cache. Recorded when DrmOverlayManager is asked to
    verify an overlay configuration.
  </summary>
</histogram>

<histogram
    name="Compositing.Display.DrmOverlayManager.TotalTestBufferMemorySize"
    units="KB" expires_after="2020-09-01">
  <owner>samans@chromium.org</owner>
  <owner>rjkroege@chromium.org</owner>
  <summary>
    The amount of memory allocated for the purpose of performing a pageflip
    test. Recorded every time DRM thread is asked to validate an overlay
    configuration.
  </summary>
</histogram>

<histogram name="Compositing.Display.FlattenedRenderPassCount" units="units"
    expires_after="2022-04-24">
  <owner>backer@chromium.org</owner>
  <owner>rjkroege@chromium.org</owner>
  <summary>
    This is logged once per frame. It is the number of renderer passes after
    flattening all possible render passes. If the value is more than one, then
    an intermediate rendering target must be used during the rendering of the
    frame for each render pass greater than one.
  </summary>
</histogram>

<histogram
    name="Compositing.Display.OverlayProcessorOzone.IsCandidateSharedImage"
    enum="Boolean" expires_after="2021-09-19">
  <owner>samans@chromium.org</owner>
  <owner>rjkroege@chromium.org</owner>
  <summary>
    Indicates whether the OverlayCandidate passed to
    OverlayCandidateValidatorOzone is backed by a SharedImage (as opposed to a
    legacy mailbox). Recorded for every candidate in every overlay configuration
    passed to OverlayProcessorOzone.
  </summary>
</histogram>

<histogram name="Compositing.Display.OverlayProcessorOzone.SharedImageExists"
    enum="Boolean" expires_after="2021-09-19">
  <owner>samans@chromium.org</owner>
  <owner>rjkroege@chromium.org</owner>
  <summary>
    Indicates whether the SharedImage corresponding to the OverlayCandidate was
    found. Reported for every OverlayCandidate that is backed by a SharedImage.
  </summary>
</histogram>

<histogram name="Compositing.Display.VizDependencyResolvedToGpuStartedDrawUs"
    units="microseconds" expires_after="2022-04-10">
  <owner>vasilyt@chromium.org</owner>
  <owner>backer@chromium.org</owner>
  <summary>
    This is logged once per frame, if the output surface provides timing
    information. It measures delta between the time when display compositor draw
    task's dependencies have been solved and the time when the Gpu Thread
    started processing it. Only reported for platforms supporting high
    resolution clocks.
  </summary>
</histogram>

<histogram name="Compositing.Display.VizScheduledDrawToDependencyResolvedUs"
    units="microseconds" expires_after="2022-04-10">
  <owner>vasilyt@chromium.org</owner>
  <owner>backer@chromium.org</owner>
  <summary>
    This is logged once per frame if the output surface provides timing
    information. It measures delta between the time when display compositor
    scheduled first draw task for the current frame on Viz Compositor thread and
    the time when the task's dependencies have been resolved and the task is
    ready for the Gpu Thread to start processing it. Recorded when swap
    completes. Only reported for platforms supporting high resolution clocks.
  </summary>
</histogram>

<histogram name="Compositing.Display.VizScheduledDrawToGpuStartedDrawUs"
    units="microseconds" expires_after="2022-04-10">
  <owner>vasilyt@chromium.org</owner>
  <owner>backer@chromium.org</owner>
  <summary>
    This is logged once per frame if the output surface provides timing
    information. It measures delta between the time when display compositor
    scheduled first draw task for the current frame on Viz Compositor thread and
    the time when Gpu Thread started processing it. Recorded when swap
    completes. Only reported for platforms supporting high resolution clocks.
  </summary>
</histogram>

<histogram name="Compositing.Renderer.CALayerResult" enum="CALayerResult"
    expires_after="2022-05-01">
  <owner>ccameron@chromium.org</owner>
  <owner>graphics-dev@chromium.org</owner>
  <summary>
    The outcome of attempting to replace all renderer tiles with CALayers.
    Either success, or the first reason why a DrawQuad couldn't be replaced by a
    CALayer.
  </summary>
</histogram>

<histogram name="Compositing.Renderer.GPUMemoryForTilingsInKb" units="Kb"
    expires_after="M99">
  <owner>pdr@chromium.org</owner>
  <owner>paint-dev@chromium.org</owner>
  <summary>
    The GPU memory allocated for tilings (in a renderer process), summed over
    all picture layers. Emitted once per drawing. Nothing is recorded if there
    are no picture layers.

    Tilings are used for decomposition of the layer's entire contents at a
    picture screenspace resolution to do threaded rasterization.
  </summary>
</histogram>

<histogram name="Compositing.Renderer.HitTestTimeToFindClosestLayer"
    units="microseconds" expires_after="2020-12-01">
  <obsolete>
    Expired Dec 2020.
  </obsolete>
  <owner>flackr@chromium.org</owner>
  <owner>input-dev@chromium.org</owner>
  <summary>
    Time spent finding the closest matching layer to a given point whenever we
    do hit testing on LayerTreeImpl (in a renderer process).

    Warning: This metric may include reports from clients with low-resolution
    clocks (i.e. on Windows, ref. |TimeTicks::IsHighResolution()|). Such reports
    will cause this metric to have an abnormal distribution. When considering
    revising this histogram, see UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES for the
    solution.
  </summary>
</histogram>

<histogram
    name="Compositing.Renderer.LayerSkippedForDrawPropertiesDueToBackface"
    units="boolean" expires_after="2022-02-01">
  <owner>chrishtr@chromium.org</owner>
  <owner>dbaron@chromium.org</owner>
  <owner>paint-dev@chromium.org</owner>
  <summary>
    Records whether layer draw properties updates were skipped due to the layer
    being back-facing and not being double-sided, but were otherwise going to be
    updated.
  </summary>
</histogram>

<histogram name="Compositing.Renderer.LayersUpdateTime" units="microseconds"
    expires_after="2022-04-10">
  <owner>schenney@chromium.org</owner>
  <owner>paint-dev@chromium.org</owner>
  <summary>
    Time spent updating layers, in microseconds. Recorded when layers are
    updated (in a renderer process).

    Warning: This metric may include reports from clients with low-resolution
    clocks (i.e. on Windows, ref. |TimeTicks::IsHighResolution()|). Such reports
    will cause this metric to have an abnormal distribution. When considering
    revising this histogram, see UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES for the
    solution.
  </summary>
</histogram>

<histogram name="Compositing.Renderer.LayerTreeImpl.CalculateDrawPropertiesUs"
    units="microseconds" expires_after="M81">
  <owner>schenney@chromium.org</owner>
  <owner>paint-dev@chromium.org</owner>
  <summary>
    Time spent updating layer draw properties, in microseconds. Recorded when a
    LayerTreeImpl's draw properties are updated (in a renderer process).

    Warning: This metric may include reports from clients with low-resolution
    clocks (i.e. on Windows, ref. |TimeTicks::IsHighResolution()|). Such reports
    will cause this metric to have an abnormal distribution. When considering
    revising this histogram, see UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES for the
    solution.
  </summary>
</histogram>

<histogram name="Compositing.Renderer.LayerUpdateSkippedDueToBackface"
    units="boolean" expires_after="2022-02-01">
  <owner>chrishtr@chromium.org</owner>
  <owner>dbaron@chromium.org</owner>
  <owner>paint-dev@chromium.org</owner>
  <summary>
    Records whether a layer update was skipped due to the layer being
    back-facing and not being double-sided, but was otherwise going to be
    updated.
  </summary>
</histogram>

<histogram name="Compositing.Renderer.LCDTextDisallowedReasonKPixels"
    enum="LCDTextDisallowedReason" expires_after="2022-04-03">
  <owner>wangxianzhu@chromium.org</owner>
  <owner>paint-dev@chromium.org</owner>
  <summary>
    Records the approximate kilo-pixels covered by text drawing operations by
    LCD-text disallowed reasons. Hence the histogram value for each reason is
    the approximate number of non-LCD kilo-pixels resulting from that reason.
    Recorded when the renderer is idle, at minimum interval of the longer of 1
    minute and 500 begin frames for each local frame tree.
  </summary>
</histogram>

<histogram name="Compositing.Renderer.LCDTextDisallowedReasonLayers"
    enum="LCDTextDisallowedReason" expires_after="2022-04-10">
  <owner>wangxianzhu@chromium.org</owner>
  <owner>paint-dev@chromium.org</owner>
  <summary>
    Records the number of layers containing text by LCD-text disallowed reasons.
    Recorded along with Compositing.Renderer.LCDTextDisallowedReasonKPixels.
  </summary>
</histogram>

<histogram name="Compositing.Renderer.NumActiveLayers" units="layers"
    expires_after="2022-04-10">
  <owner>schenney@chromium.org</owner>
  <owner>paint-dev@chromium.org</owner>
  <summary>
    The number of layers in the active tree for each compositor frame. This is
    logged once per frame, before the frame is drawn (in a renderer process).
  </summary>
</histogram>

<histogram name="Compositing.Renderer.NumActivePictureLayers" units="layers"
    expires_after="2022-04-10">
  <owner>schenney@chromium.org</owner>
  <owner>paint-dev@chromium.org</owner>
  <summary>
    The number of PictureLayers in the active tree for each compositor frame.
    This is logged once per frame, before the frame is drawn (in a renderer
    process).
  </summary>
</histogram>

<histogram name="Compositing.Renderer.NumRenderSurfaces" units="surfaces"
    expires_after="2022-04-24">
  <owner>schenney@chromium.org</owner>
  <owner>paint-dev@chromium.org</owner>
  <summary>
    The number of render surfaces in the render surface layer list. Recorded
    each time the render surface layer list is constructed (in a renderer
    process).
  </summary>
</histogram>

<histogram
    name="Compositing.RenderPass.AppendQuadData.CheckerboardedNeedRasterContentArea"
    units="pixels/frame" expires_after="2020-04-19">
  <owner>weiliangc@chromium.org</owner>
  <summary>
    Checkerboarded area, in number of pixels, that has recording but does not
    have time to finish rastering yet. A sample is recorded everytime a frame is
    drawn while a scroll is in progress. Tracking bug 535732.
  </summary>
</histogram>

<histogram
    name="Compositing.RenderPass.AppendQuadData.CheckerboardedNoRecordingContentArea"
    units="pixels/frame" expires_after="M82">
  <owner>weiliangc@chromium.org</owner>
  <summary>
    Checkerboarded area, in number of pixels, that has no recording to raster
    from. A sample is recorded everytime a frame is drawn while a scroll is in
    progress. Tracking bug 535732.
  </summary>
</histogram>

<histogram name="Compositing.RenderPass.AppendQuadData.NumIncompleteTiles"
    units="units" expires_after="M81">
  <owner>weiliangc@chromium.org</owner>
  <summary>
    Keeps track of number of incomplete tiles in a drawn compositor frame while
    scrolling. This is a rough measurement of ugliness during user interaction.
    Incomplete tiles are non ideal scaled. A sample is recorded everytime a
    frame is drawn while a scroll is in progress. Tracking bug 381695.
  </summary>
</histogram>

<histogram name="Compositing.RenderPass.AppendQuadData.NumMissingTiles"
    units="units" expires_after="M81">
  <owner>weiliangc@chromium.org</owner>
  <summary>
    Keeps track of number of missing tiles in a drawn compositor frame while
    scrolling. This is a rough measurement of ugliness during user interaction.
    Incomplete tiles are checkerboard or solid color. A sample is recorded
    everytime a frame is drawn while a scroll is in progress. Tracking bug
    381695.
  </summary>
</histogram>

<histogram base="true" name="Compositing.ResourcePoolMemoryUsage" units="MB"
    expires_after="2022-05-01">
  <owner>sunnyps@chromium.org</owner>
  <owner>graphics-dev@chromium.org</owner>
  <summary>
    Size of the in-use portion of the ResourcePool for CC layer tree. Recorded
    each time resources are reclaimed after tile work completes.
  </summary>
</histogram>

<histogram name="Compositing.SurfaceAggregator.AggregateUs"
    units="microseconds" expires_after="2022-08-19">
  <owner>weiliangc@chromium.org</owner>
  <owner>kylechar@chromium.org</owner>
  <summary>
    Time spent aggregating compositor frames from different surfaces in
    microseconds. This is logged once per frame.

    Warning: This metric may include reports from clients with low-resolution
    clocks (i.e. on Windows, ref. |TimeTicks::IsHighResolution()|). Such reports
    will cause this metric to have an abnormal distribution. When considering
    revising this histogram, see UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES for the
    solution.
  </summary>
</histogram>

<histogram name="Compositing.SurfaceAggregator.CopiedSurfaceCount"
    units="surfaces" expires_after="2022-05-01">
  <owner>kylechar@chromium.org</owner>
  <owner>jonross@chromium.org</owner>
  <summary>
    The number of surfaces where the active CompositorFrame was copied into the
    AggregateFrame during surface aggregation. This is logged once per frame.
  </summary>
</histogram>

<histogram name="Compositing.SurfaceAggregator.CopyUs" units="microseconds"
    expires_after="2022-04-17">
  <owner>kylechar@chromium.org</owner>
  <owner>jonross@chromium.org</owner>
  <summary>
    Time spent copying quads during surface aggregation. This is a subset of the
    time recorded for Compositing.SurfaceAggregator.AggregateUs and is logged
    once per frame.

    Warning: This metric does not include reports from clients with
    low-resolution clocks.
  </summary>
</histogram>

<histogram name="Compositing.SurfaceAggregator.DeclareResourceCount"
    units="resources" expires_after="2022-04-17">
  <owner>kylechar@chromium.org</owner>
  <owner>jonross@chromium.org</owner>
  <summary>
    The number of TransferableResources processed while declaring resources as
    used during surface aggregation. This is logged once per frame.
  </summary>
</histogram>

<histogram name="Compositing.SurfaceAggregator.DeclareResourcesUs"
    units="microseconds" expires_after="2022-04-03">
  <owner>kylechar@chromium.org</owner>
  <owner>jonross@chromium.org</owner>
  <summary>
    Time spent declaring resources as used during surface aggregation. This is a
    subset of the time recorded for Compositing.SurfaceAggregator.AggregateUs
    and is logged once per frame.

    Warning: This metric does not include reports from clients with
    low-resolution clocks.
  </summary>
</histogram>

<histogram name="Compositing.SurfaceAggregator.FrameContainsVideo"
    enum="TypeOfVideoInFrame" expires_after="2021-10-04">
  <owner>vikassoni@chromium.org</owner>
  <owner>khushalsagar@chromium.org</owner>
  <summary>
    Whether an aggregated frame contains video or not. This metric will be used
    to analyze the percentage of displayed frame with video. This metric will be
    extended in future to specify whether the video is inline or fullscreen.
  </summary>
</histogram>

<histogram name="Compositing.SurfaceAggregator.PrewalkedSurfaceCount"
    units="surfaces" expires_after="2022-04-24">
  <owner>kylechar@chromium.org</owner>
  <owner>jonross@chromium.org</owner>
  <summary>
    The number of surfaces that were looked at during the prewalk phase of
    surface aggregation. This is logged once per frame.
  </summary>
</histogram>

<histogram name="Compositing.SurfaceAggregator.PrewalkUs" units="microseconds"
    expires_after="2022-04-03">
  <owner>kylechar@chromium.org</owner>
  <owner>jonross@chromium.org</owner>
  <summary>
    Time spent doing prewalk during surface aggregation. This is a subset of the
    time recorded for Compositing.SurfaceAggregator.AggregateUs and is logged
    once per frame.

    Warning: This metric does not include reports from clients with
    low-resolution clocks.
  </summary>
</histogram>

<histogram name="Compositing.SurfaceDependencyDeadline.Duration" units="ms"
    expires_after="2020-12-01">
  <obsolete>
    Expired October 2020.
  </obsolete>
  <owner>jonross@chromium.org</owner>
  <owner>kylechar@chromium.org</owner>
  <summary>
    The amount of time it took for a Surface with unresolved dependencies to
    activate. Note that some activations may be triggered due to a deadline
    hitting. That is tracked in the DeadlineHit histogram.
  </summary>
</histogram>

<histogram name="Compositing.SurfaceManager.AliveSurfaces" units="surfaces"
    expires_after="2020-12-01">
  <obsolete>
    Expired October 2020.
  </obsolete>
  <owner>jonross@chromium.org</owner>
  <owner>kylechar@chromium.org</owner>
  <summary>
    Tracks the number of alive surfaces after each garbage collection operation.
  </summary>
</histogram>

</histograms>

</histogram-configuration>
