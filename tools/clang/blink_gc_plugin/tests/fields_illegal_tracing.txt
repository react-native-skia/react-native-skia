In file included from fields_illegal_tracing.cpp:5:
./fields_illegal_tracing.h:30:1: warning: [blink-gc] Class 'PartObjectWithTrace' contains invalid fields.
class PartObjectWithTrace {
^
./fields_illegal_tracing.h:37:3: note: [blink-gc] scoped_refptr field 'm_obj2' to a GC managed class declared here:
  scoped_refptr<HeapObject> m_obj2;
  ^
./fields_illegal_tracing.h:39:3: note: [blink-gc] std::unique_ptr field 'm_obj4' to a GC managed class declared here:
  std::unique_ptr<HeapObject> m_obj4;
  ^
./fields_illegal_tracing.h:41:3: warning: [blink-gc] Iterator field 'm_iterator2' to a GC managed collection declared here:
  HeapVector<Member<HeapObject>>::iterator m_iterator2;
  ^
./fields_illegal_tracing.h:42:3: warning: [blink-gc] Iterator field 'm_iterator3' to a GC managed collection declared here:
  HeapHashSet<PartObject>::const_iterator m_iterator3;
  ^
./fields_illegal_tracing.h:49:1: warning: [blink-gc] Class 'HeapObject' contains invalid fields.
class HeapObject : public GarbageCollected<HeapObject> {
^
./fields_illegal_tracing.h:55:3: note: [blink-gc] scoped_refptr field 'm_obj2' to a GC managed class declared here:
  scoped_refptr<HeapObject> m_obj2;
  ^
./fields_illegal_tracing.h:57:3: note: [blink-gc] std::unique_ptr field 'm_obj4' to a GC managed class declared here:
  std::unique_ptr<HeapObject> m_obj4;
  ^
./fields_illegal_tracing.h:58:3: warning: [blink-gc] Iterator field 'm_iterator3' to a GC managed collection declared here:
  HeapHashMap<int, Member<HeapObject>>::reverse_iterator m_iterator3;
  ^
./fields_illegal_tracing.h:59:3: warning: [blink-gc] Iterator field 'm_iterator4' to a GC managed collection declared here:
  HeapDeque<Member<HeapObject>>::const_reverse_iterator m_iterator4;
  ^
./fields_illegal_tracing.h:60:3: warning: [blink-gc] Iterator field 'm_iterator6' to a GC managed collection declared here:
  HeapLinkedHashSet<Member<HeapObject>>::const_iterator m_iterator6;
  ^
./fields_illegal_tracing.h:63:1: warning: [blink-gc] Class 'StackAllocatedObject' contains invalid fields.
class StackAllocatedObject {
^
./fields_illegal_tracing.h:67:3: note: [blink-gc] scoped_refptr field 'm_obj2' to a GC managed class declared here:
  scoped_refptr<HeapObject> m_obj2;
  ^
./fields_illegal_tracing.h:69:3: note: [blink-gc] std::unique_ptr field 'm_obj4' to a GC managed class declared here:
  std::unique_ptr<HeapObject> m_obj4;
  ^
fields_illegal_tracing.cpp:9:1: warning: [blink-gc] Class 'PartObjectWithTrace' has untraced or not traceable fields.
void PartObjectWithTrace::Trace(Visitor* visitor) const {
^
./fields_illegal_tracing.h:37:3: note: [blink-gc] Untraceable field 'm_obj2' declared here:
  scoped_refptr<HeapObject> m_obj2;
  ^
./fields_illegal_tracing.h:39:3: note: [blink-gc] Untraceable field 'm_obj4' declared here:
  std::unique_ptr<HeapObject> m_obj4;
  ^
fields_illegal_tracing.cpp:15:1: warning: [blink-gc] Class 'HeapObject' has untraced or not traceable fields.
void HeapObject::Trace(Visitor* visitor) const {
^
./fields_illegal_tracing.h:55:3: note: [blink-gc] Untraceable field 'm_obj2' declared here:
  scoped_refptr<HeapObject> m_obj2;
  ^
./fields_illegal_tracing.h:57:3: note: [blink-gc] Untraceable field 'm_obj4' declared here:
  std::unique_ptr<HeapObject> m_obj4;
  ^
10 warnings generated.
